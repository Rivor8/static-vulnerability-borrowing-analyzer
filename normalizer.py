import re


class Normalizer:
    def __init__(self, raw_code: str):
        self.raw_code = raw_code

    def get_normalized(self) -> str:
        code = self.raw_code

        # Удаляем директивы препроцессора
        code = re.sub(r'^\s*#.*$', '', code, flags=re.MULTILINE)

        # Удаляем комментарии (как однострочные, так и многострочные)
        code = re.sub(r'//.*$', '', code, flags=re.MULTILINE)
        code = re.sub(r'/\*.*?\*/', '', code, flags=re.DOTALL)

        # Удаляем лишние пробелы и пустые строки
        code = re.sub(r'\s+', ' ', code)
        code = re.sub(r'\s*{\s*', ' { ', code)
        code = re.sub(r'\s*}\s*', ' } ', code)
        code = re.sub(r'\s*;\s*', '; ', code)
        code = re.sub(r'\s*\(\s*', '(', code)
        code = re.sub(r'\s*\)\s*', ')', code)
        code = re.sub(r'\s*,\s*', ', ', code)

        # Удаляем начальные и конечные пробелы
        code = code.strip()

        return code
