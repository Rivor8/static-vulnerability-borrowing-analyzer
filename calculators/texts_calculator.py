class TextsCalculator:

    @staticmethod
    def calculate_similarity(first_text: str, second_text: str) -> float:
        matrix = [[0] * (len(second_text) + 1) for _ in range(len(first_text) + 1)]

        for i in range(len(first_text) + 1):
            matrix[i][0] = i
        for j in range(len(second_text) + 1):
            matrix[0][j] = j

        for i in range(1, len(first_text) + 1):
            for j in range(1, len(second_text) + 1):
                if first_text[i - 1] == second_text[j - 1]:
                    cost = 0
                else:
                    cost = 1
                matrix[i][j] = min(matrix[i - 1][j] + 1,
                                   matrix[i][j - 1] + 1,
                                   matrix[i - 1][j - 1] + cost)

        distance = matrix[len(first_text)][len(second_text)]

        max_length = max(len(first_text), len(second_text))
        if max_length == 0:
            return 1.0
        else:
            return 1 - (distance / max_length)
